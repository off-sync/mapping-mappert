variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
- job: TestWindows
  pool:
    vmImage: 'windows-2019'
  strategy:
    matrix:
      NetCoreApp2_2:
        framework: netcoreapp2.2
      Net461:
        framework: net461
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Build Solution'
    inputs:
      command: build
      arguments: '--configuration Release'

  - template: .azure-pipelines/test-project-step-template.yml
    parameters:
      framework: $(framework)
      projectName: OffSync.Mapping.Mappert.Tests

  - template: .azure-pipelines/test-project-step-template.yml
    parameters:
      framework: $(framework)
      projectName: OffSync.Mapping.Mappert.DynamicMethods.Tests

  - template: .azure-pipelines/test-project-step-template.yml
    parameters:
      framework: $(framework)
      projectName: OffSync.Mapping.Mappert.Practises.Tests

  - template: .azure-pipelines/test-project-step-template.yml
    parameters:
      framework: $(framework)
      projectName: OffSync.Mapping.Mappert.Reflection.Tests

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'TestWindows-TestResults-$(framework)'
      targetPath: '$(Agent.TempDirectory)/TestResults'

- job: Quality
  dependsOn: [ TestWindows ]
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: DownloadPipelineArtifact@1
    inputs:
      downloadPath: '$(Agent.TempDirectory)/TestResults'

  - task: SonarCloudPrepare@1
    displayName: 'Prepare Code Analysis'
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'off-sync'
      projectKey: 'off-sync_mapping-mappert'
      projectName: 'Off-Sync.com Mappert'
      extraProperties: |
        sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/TestResults/**/*.opencover.xml
        sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/TestResults/**/*.trx

  - task: DotNetCoreCLI@2
    displayName: 'Build Solution'
    inputs:
      command: build
      arguments: '--configuration Debug'
  
  - task: SonarCloudAnalyze@1
    displayName: 'Run Code Analysis'

  - task: SonarCloudPublish@1
    displayName: 'Publish Code Analysis'

  - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
    displayName: ReportGenerator
    inputs:     
      reports: '$(Agent.TempDirectory)/TestResults/**/*.opencover.xml'
      targetdir: '$(Agent.TempDirectory)/Reports'
      reporttypes: 'HtmlInline_AzurePipelines;Cobertura;Badges'
      assemblyfilters: '-nunit*'

  - task: PublishCodeCoverageResults@1
    inputs:
      summaryFileLocation: '$(Agent.TempDirectory)/Reports/Cobertura.xml'
      reportDirectory: '$(Agent.TempDirectory)/Reports'
      codecoverageTool: cobertura

- job: Pack
  dependsOn: [ Quality ]
  pool:
    vmImage: 'windows-2019'
  steps:
  - template: .azure-pipelines/pack-project-step-template.yml
    parameters:
      projectName: OffSync.Mapping.Mappert

  - template: .azure-pipelines/pack-project-step-template.yml
    parameters:
      projectName: OffSync.Mapping.Mappert.DynamicMethods

  - template: .azure-pipelines/pack-project-step-template.yml
    parameters:
      projectName: OffSync.Mapping.Mappert.Practises

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Build Artifacts'